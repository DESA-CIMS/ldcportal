/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.un.ldcportal.ismapplications.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the ISM service. Represents a row in the &quot;ISM_ISM&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.un.ldcportal.ismapplications.model.impl.ISMModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.un.ldcportal.ismapplications.model.impl.ISMImpl}.
 * </p>
 *
 * @author Thibault Boyeux
 * @see ISM
 * @see org.un.ldcportal.ismapplications.model.impl.ISMImpl
 * @see org.un.ldcportal.ismapplications.model.impl.ISMModelImpl
 * @generated
 */
public interface ISMModel extends BaseModel<ISM> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a i s m model instance should use the {@link ISM} interface instead.
	 */

	/**
	 * Returns the primary key of this i s m.
	 *
	 * @return the primary key of this i s m
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this i s m.
	 *
	 * @param primaryKey the primary key of this i s m
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ism ID of this i s m.
	 *
	 * @return the ism ID of this i s m
	 */
	public long getIsmId();

	/**
	 * Sets the ism ID of this i s m.
	 *
	 * @param ismId the ism ID of this i s m
	 */
	public void setIsmId(long ismId);

	/**
	 * Returns the web content ID of this i s m.
	 *
	 * @return the web content ID of this i s m
	 */
	public long getWebContentId();

	/**
	 * Sets the web content ID of this i s m.
	 *
	 * @param webContentId the web content ID of this i s m
	 */
	public void setWebContentId(long webContentId);

	/**
	 * Returns the moderator ID of this i s m.
	 *
	 * @return the moderator ID of this i s m
	 */
	public long getModeratorId();

	/**
	 * Sets the moderator ID of this i s m.
	 *
	 * @param moderatorId the moderator ID of this i s m
	 */
	public void setModeratorId(long moderatorId);

	/**
	 * Returns the company ID of this i s m.
	 *
	 * @return the company ID of this i s m
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this i s m.
	 *
	 * @param companyId the company ID of this i s m
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this i s m.
	 *
	 * @return the group ID of this i s m
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this i s m.
	 *
	 * @param groupId the group ID of this i s m
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the mb category ID of this i s m.
	 *
	 * @return the mb category ID of this i s m
	 */
	public long getMbCategoryId();

	/**
	 * Sets the mb category ID of this i s m.
	 *
	 * @param mbCategoryId the mb category ID of this i s m
	 */
	public void setMbCategoryId(long mbCategoryId);

	/**
	 * Returns the asset category ID of this i s m.
	 *
	 * @return the asset category ID of this i s m
	 */
	public long getAssetCategoryId();

	/**
	 * Sets the asset category ID of this i s m.
	 *
	 * @param assetCategoryId the asset category ID of this i s m
	 */
	public void setAssetCategoryId(long assetCategoryId);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(ISM ism);

	public int hashCode();

	public CacheModel<ISM> toCacheModel();

	public ISM toEscapedModel();

	public String toString();

	public String toXmlString();
}