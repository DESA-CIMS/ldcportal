/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.un.ldcportal.jargon.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.un.ldcportal.jargon.model.LDCJargon;
import org.un.ldcportal.jargon.model.LDCJargonModel;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the LDCJargon service. Represents a row in the &quot;LDCJargon_LDCJargon&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.un.ldcportal.jargon.model.LDCJargonModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LDCJargonImpl}.
 * </p>
 *
 * @author Thibault Boyeux
 * @see LDCJargonImpl
 * @see org.un.ldcportal.jargon.model.LDCJargon
 * @see org.un.ldcportal.jargon.model.LDCJargonModel
 * @generated
 */
public class LDCJargonModelImpl extends BaseModelImpl<LDCJargon>
	implements LDCJargonModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l d c jargon model instance should use the {@link org.un.ldcportal.jargon.model.LDCJargon} interface instead.
	 */
	public static final String TABLE_NAME = "LDCJargon_LDCJargon";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ldcJargonId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "definition", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table LDCJargon_LDCJargon (ldcJargonId LONG not null primary key,name VARCHAR(255) null,definition STRING null,companyId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table LDCJargon_LDCJargon";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.un.ldcportal.jargon.model.LDCJargon"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.un.ldcportal.jargon.model.LDCJargon"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.un.ldcportal.jargon.model.LDCJargon"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.un.ldcportal.jargon.model.LDCJargon"));

	public LDCJargonModelImpl() {
	}

	public long getPrimaryKey() {
		return _ldcJargonId;
	}

	public void setPrimaryKey(long primaryKey) {
		setLdcJargonId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_ldcJargonId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return LDCJargon.class;
	}

	public String getModelClassName() {
		return LDCJargon.class.getName();
	}

	public long getLdcJargonId() {
		return _ldcJargonId;
	}

	public void setLdcJargonId(long ldcJargonId) {
		_ldcJargonId = ldcJargonId;
	}

	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public String getDefinition() {
		if (_definition == null) {
			return StringPool.BLANK;
		}
		else {
			return _definition;
		}
	}

	public void setDefinition(String definition) {
		_definition = definition;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public LDCJargon toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (LDCJargon)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					LDCJargon.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		LDCJargonImpl ldcJargonImpl = new LDCJargonImpl();

		ldcJargonImpl.setLdcJargonId(getLdcJargonId());
		ldcJargonImpl.setName(getName());
		ldcJargonImpl.setDefinition(getDefinition());
		ldcJargonImpl.setCompanyId(getCompanyId());
		ldcJargonImpl.setGroupId(getGroupId());

		ldcJargonImpl.resetOriginalValues();

		return ldcJargonImpl;
	}

	public int compareTo(LDCJargon ldcJargon) {
		long primaryKey = ldcJargon.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		LDCJargon ldcJargon = null;

		try {
			ldcJargon = (LDCJargon)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = ldcJargon.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LDCJargonModelImpl ldcJargonModelImpl = this;

		ldcJargonModelImpl._originalGroupId = ldcJargonModelImpl._groupId;

		ldcJargonModelImpl._setOriginalGroupId = false;

		ldcJargonModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LDCJargon> toCacheModel() {
		LDCJargonCacheModel ldcJargonCacheModel = new LDCJargonCacheModel();

		ldcJargonCacheModel.ldcJargonId = getLdcJargonId();

		ldcJargonCacheModel.name = getName();

		String name = ldcJargonCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			ldcJargonCacheModel.name = null;
		}

		ldcJargonCacheModel.definition = getDefinition();

		String definition = ldcJargonCacheModel.definition;

		if ((definition != null) && (definition.length() == 0)) {
			ldcJargonCacheModel.definition = null;
		}

		ldcJargonCacheModel.companyId = getCompanyId();

		ldcJargonCacheModel.groupId = getGroupId();

		return ldcJargonCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{ldcJargonId=");
		sb.append(getLdcJargonId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", definition=");
		sb.append(getDefinition());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("org.un.ldcportal.jargon.model.LDCJargon");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ldcJargonId</column-name><column-value><![CDATA[");
		sb.append(getLdcJargonId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>definition</column-name><column-value><![CDATA[");
		sb.append(getDefinition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LDCJargon.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			LDCJargon.class
		};
	private long _ldcJargonId;
	private String _name;
	private String _definition;
	private long _companyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private LDCJargon _escapedModelProxy;
}